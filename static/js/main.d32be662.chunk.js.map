{"version":3,"sources":["components/Cd.js","components/Control.js","components/Progress.js","components/Header.js","components/ChangeList.js","components/SongWave.js","components/ChangeTheme.js","components/Dashboard.js","components/SongsModal.js","components/AddSong.js","components/Song.js","components/Playlist.js","components/Loading.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Cd","props","classes","isPlaying","className","style","backgroundImage","image","Control","useState","classRandom","setClassRandom","classRepeat","setClassRepeat","useEffect","songState","activeRepeat","activeRandom","onClick","modifySongState","modifyActiveRepeat","modifySongPlay","songIndex","Math","round","random","songCount","modifyIsPlaying","modifyActiveRandom","Progress","percentage","modifyPercentage","modifyCurruntTime","duration","cdThumb","id","onChange","e","target","value","handleOnChangeProgress","type","step","min","max","Header","song","singer","ChangeList","src","setSrc","songRegion","alt","modifySongRegion","SongWave","ChangeTheme","modifyClassTheme","Dashboard","volumeIcon","volumeBackground","songDetail","songs","ModifySongVolume","length","classTheme","SongsModal","handleAddSong","artists","path","singers","map","index","name","handleAddButton","songID","a","getSong","then","data","streamUrls","streamUrl","console","log","newSong","AddSong","valueRef","useRef","show","setShow","songsList","setSongsList","loading","setLoading","error","setError","handleClose","Modal","size","onHide","closeButton","Title","Body","ref","searchByKeyword","status","current","search","key","title","thumbnail","Spinner","animation","variant","Footer","Button","Song","classActive","classOption","setClassOption","showDownload","setShowDownload","showDelete","setShowDelete","handleCloseDownload","handleCloseDelete","toogleThreeDot","thumb","event","stopPropagation","class","href","download","handleSoftDelte","Playlist","Loading","Home","songVn","songUs","setSongRegion","setSongs","songAdded","setSongAdded","audioRef","setSongIndex","setCdThumb","setSong","setSinger","setIsPlaying","setDuration","setPercentage","setActiveRandom","setActiveRepeat","firstLoading","setFirstLoading","setClassTheme","volume","setVolume","setVolumeBackground","setVolumeIcon","func","fetch","response","json","catch","next","finally","setTimeManually","play","pause","isForced","url","modifySinger","modifySrc","modifyCdThumb","param","currentTime","newSongs","push","alert","region","onTimeUpdate","_percentage","updateTime","onLoadedData","currentTarget","splice","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d32be662.chunk.js","sourcesContent":["export default function Cd(props) { \r\n    let classes;\r\n\r\n    if (props.isPlaying)  classes = \"cd-thumb spin\"; else{\r\n        classes = \"cd-thumb\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"cd\">\r\n            <div className={classes} style={{ backgroundImage: `url('${props.image}')` }}>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\n\r\nexport default function Control(props) {\r\n    const [classRandom, setClassRandom] = useState(\"btn btn-random\");\r\n    const [classRepeat, setClassRepeat] = useState(\"btn btn-repeat\");\r\n\r\n    useEffect(() =>{\r\n        (props.songState.activeRepeat)? setClassRepeat(\"btn btn-repeat active\") : setClassRepeat(\"btn btn-repeat\");\r\n        (props.songState.activeRandom)? setClassRandom(\"btn btn-random active\") : setClassRandom(\"btn btn-random\");\r\n    }, [props.songState.activeRepeat, props.songState.activeRandom])\r\n    const handleOnClickBtnPrev = () => {\r\n        if (props.songState.activeRepeat){\r\n            props.modifySongPlay(props.songIndex);\r\n            return;\r\n        }\r\n        if (props.songState.activeRandom){ \r\n            props.modifySongPlay(Math.round(Math.random()*props.songCount-1));\r\n            return;\r\n        } \r\n        if (props.songIndex === 0){\r\n            props.modifySongPlay(props.songCount-1);\r\n        } else {\r\n            props.modifySongPlay(props.songIndex-1);\r\n        }\r\n    }\r\n\r\n    const handleOnClickBtnNext = () => {\r\n        if (props.songState.activeRepeat){\r\n            props.modifySongPlay(props.songIndex);\r\n            return;\r\n        }\r\n        if (props.songState.activeRandom){\r\n            props.modifySongPlay(Math.round(Math.random()*props.songCount-1));\r\n        } else{\r\n        if (props.songIndex === props.songCount-1){\r\n            props.modifySongPlay(0);\r\n        } else {\r\n            props.modifySongPlay(props.songIndex+1);\r\n        }\r\n        }\r\n    }\r\n\r\n    const handleOnClickBtnRepeat = () => {\r\n        props.modifySongState.modifyActiveRepeat(!props.songState.activeRepeat);\r\n       \r\n    }\r\n\r\n    const handleOnClickBtnRandom = () =>{\r\n        props.modifySongState.modifyActiveRandom(!props.songState.activeRandom);\r\n    }\r\n\r\n    const handleOnClickBtnTogglePlay = () => {\r\n        props.modifyIsPlaying(props.isPlaying)\r\n    }\r\n\r\n    return (\r\n        <div className=\"control\">\r\n            <div className={classRepeat} onClick={handleOnClickBtnRepeat}>\r\n                <i className=\"fas fa-redo\"></i>\r\n            </div>\r\n\r\n            <div className=\"btn btn-prev\" onClick={() => {handleOnClickBtnPrev()}}>\r\n                <i className=\"fas fa-step-backward\"></i>\r\n            </div>\r\n\r\n            <div className=\"btn btn-toggle-play\" onClick={() => {handleOnClickBtnTogglePlay()}}>\r\n                <i className=\"fas fa-pause icon-pause\"></i>\r\n                <i className=\"fas fa-play icon-play\"></i>\r\n            </div>\r\n\r\n            <div className=\"btn btn-next\" onClick={() => {handleOnClickBtnNext()}}>\r\n                <i className=\"fas fa-step-forward\"></i>\r\n            </div>\r\n\r\n            <div className={classRandom} onClick={handleOnClickBtnRandom}>\r\n                <i className=\"fas fa-random\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default function Progress({percentage, modifyPercentage, modifyCurruntTime, duration, cdThumb}) {\r\n    const handleOnChangeProgress = (e) =>{\r\n        modifyPercentage(e.target.value);\r\n        modifyCurruntTime(duration*e.target.value/100);\r\n    }\r\n    return (\r\n        <input id=\"progress\" onChange={(e) => {handleOnChangeProgress(e)}} className=\"progress\" type=\"range\" step=\"1\" min=\"0\" max=\"100\" style={{backgroundImage : `url(${cdThumb})`}}value={(percentage)? percentage : \"50\"}></input>\r\n    )\r\n}","export default function Header(props) {\r\n  return (\r\n    <header>\r\n      <h4>Now playing:</h4>\r\n      <h2>{props.song}</h2>\r\n      <h3>{props.singer}</h3>\r\n    </header>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function ChangeList(props) {\r\n    const [src, setSrc] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n        if (props.songRegion === \"usuk\") setSrc(\"https://trunkey2003.github.io/img/us.png\"); else setSrc(\"https://trunkey2003.github.io/img/vn.png\");\r\n    }, [props.songRegion])\r\n\r\n    const handleOnClickChangeListBtn = () =>{\r\n        if (props.songRegion === \"usuk\") {\r\n            props.modifySongRegion(\"vn\"); \r\n        } else{\r\n            props.modifySongRegion(\"usuk\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img id=\"change-list-btn\" src={src} alt={props.songRegion} onClick={() => {handleOnClickChangeListBtn()}} />\r\n        </div>\r\n    )\r\n}","export default function SongWave(props) {\r\n    let classes;\r\n\r\n    if (props.isPlaying) {\r\n        classes = \"song-wave song-wave-active\";\r\n      } else {\r\n        classes = \"song-wave\";\r\n      }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    );\r\n}\r\n","export default function ChangeTheme(props) {\r\n    function handleChangeThemeBtnOnClick() {\r\n        props.modifyClassTheme();\r\n    }\r\n\r\n    return (\r\n        <i className=\"fas fa-paint-roller change-theme-btn\" onClick={() => {handleChangeThemeBtnOnClick()}}></i>\r\n    )\r\n}","import Cd from './Cd'\r\nimport Control from './Control'\r\nimport Progress from './Progress'\r\nimport Header from './Header'\r\nimport ChangeList from './ChangeList'\r\nimport SongWave from './SongWave'\r\n\r\nimport { useEffect } from 'react'\r\nimport ChangeTheme from './ChangeTheme'\r\n\r\nexport default function Dashboard({songState ,volumeIcon, volumeBackground, modifyClassTheme, modifySongRegion, songDetail, modifySongPlay, modifyIsPlaying, percentage, modifyPercentage, modifyCurruntTime, songCount, modifySongState, songs, ModifySongVolume}) {\r\n    useEffect(()=>{\r\n        if (songs.length !== 0) modifySongPlay(songDetail.songIndex,true);\r\n    }, [songCount])\r\n    return (\r\n        <div key={`${songDetail.songRegion} ${songDetail.classTheme}`} className=\"dashboard\">\r\n            <div className=\"volume-container\"><div className={volumeBackground}></div><i className={`${volumeIcon} volume-icon`} onClick={() => {ModifySongVolume()}}/></div>\r\n            <SongWave isPlaying={songDetail.isPlaying}/>\r\n            <ChangeTheme modifyClassTheme={modifyClassTheme}/>\r\n            <ChangeList songRegion={songDetail.songRegion} modifySongRegion={modifySongRegion} />\r\n            <Header song={songDetail.song} singer={songDetail.singer} />\r\n            <Cd image={songDetail.cdThumb} isPlaying={songDetail.isPlaying} modifyIsPlaying={modifyIsPlaying} />\r\n            <Control songState={songState} modifySongState={modifySongState} songCount={songCount} songIndex={songDetail.songIndex} isPlaying={songDetail.isPlaying} modifySongPlay={modifySongPlay} modifyIsPlaying={modifyIsPlaying} />\r\n            <Progress cdThumb={songDetail.cdThumb} duration={songDetail.duration} percentage={percentage} modifyPercentage={modifyPercentage} modifyCurruntTime={modifyCurruntTime} />\r\n        </div>\r\n    )\r\n}","import {\r\n    getSong,\r\n} from \"nhaccuatui-api-full\";\r\n\r\nexport default function SongsModal({handleAddSong, song, artists, image, path, id}) {\r\n    var singers = \"\";\r\n    image = (image)? image : \"https://i1.sndcdn.com/avatars-000606604806-j6ghpm-t500x500.jpg\";\r\n    if (artists) {artists.map((singer, index) => {\r\n        singers = singers + singer.name;\r\n        if (artists.length-1 != index) singers = singers + \" - \";\r\n    })}\r\n\r\n    const handleAddButton = async (songID) =>{\r\n        await getSong(songID).then((data) => path = data.song.streamUrls[0].streamUrl);\r\n        console.log(path);\r\n        let newSong = {\r\n            name: song,\r\n            singer: singers,\r\n            path: path,\r\n            image: image,\r\n        }\r\n        await handleAddSong(newSong);\r\n    }\r\n    return(\r\n        <div className=\"songs-modal\">\r\n            <div className=\"songs-modal-img\">\r\n                <img alt=\"hello\" src={image}></img>\r\n            </div>\r\n            <div className=\"songs-modal-detail\">\r\n                <h5 className=\"songs-modal-detail-song\">{song}</h5>\r\n                <h4 className=\"songs-modal-detail-singger\">{singers}</h4>\r\n                <button onClick={() => {handleAddButton(id)}} className=\"song-modal-detail-button custom-download-btn\">Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useRef, useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport {\r\n  searchByKeyword,\r\n} from \"nhaccuatui-api-full\";\r\nimport SongsModal from './SongsModal';\r\n\r\nexport default function AddSong(props) {\r\n  const valueRef = useRef();\r\n  const [show, setShow] = useState(false);\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false)\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleInputOnchange = (value) => {\r\n    if (!value) return;\r\n    setLoading(true);\r\n    searchByKeyword(value).then((data) => {\r\n      if (data.status == 'success') { console.log(data); if (valueRef.current.value === value) setSongsList(data.search.song.song); setLoading(false); setError(false); }\r\n      else if (data.status == 'error') {\r\n        console.log(\"Error search\");\r\n        setError(true);\r\n      }\r\n    });\r\n    console.log(loading);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-song-section\" onClick={handleShow}>\r\n        Add your own song\r\n      </div>\r\n      <Modal size=\"lg\" className=\"custom-modal-01\" show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add your song to the playlist</Modal.Title>\r\n          <button type=\"button\" className=\"custom-btn-close-modal\" onClick={handleClose} aria-label=\"Close\"><i className=\"fas fa-times\"></i></button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h2>Search song</h2>\r\n          <input ref={valueRef} onChange={(e) => { handleInputOnchange(e.target.value); }} className=\"search-song-input\"></input>\r\n          <div className=\"songs-modal-container\">\r\n            {(!error) ? <>{((songsList) ? ((loading == false) ? songsList.map((song, index) => {\r\n              return (\r\n                <SongsModal modifySongPlay={props.modifySongPlay} songs={props.songs} handleAddSong={props.handleAddSong} id={song.key} song={song.title} artists={song.artists} image={song.thumbnail}></SongsModal>\r\n              )\r\n            }) : <div className=\"songs-modal-loading\"><h4>Loading <Spinner animation=\"border\" className=\"spinner\" variant=\"info\" /></h4></div>) : \"\")}</> : <div className=\"error\"><img src=\"https://firebasestorage.googleapis.com/v0/b/trunkey-music-player.appspot.com/o/error.jpg?alt=media&token=8411cc5c-4456-489d-b0a1-3eb129ddd564\"></img></div>}\r\n          </div>\r\n\r\n        </Modal.Body>\r\n\r\n\r\n\r\n\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" className=\"custom-close-btn\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" className=\"custom-download-btn\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}","import { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n\r\nexport default function Song(props) {\r\n    let classActive = \"song\";\r\n    const [classOption, setClassOption] = useState(\"option-songs-btn\");\r\n    const [showDownload, setShowDownload] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n\r\n    const handleCloseDownload = () => setShowDownload(false);\r\n    const handleShowDownload = () => setShowDownload(true);\r\n\r\n    const handleCloseDelete = () => setShowDelete(false);\r\n    const handleShowDelete = () => setShowDelete(true);\r\n\r\n    const modifySongPlay = function (index) {\r\n        props.modifySongPlay(index, true);\r\n        props.modifyIsPlaying(false);\r\n    }\r\n\r\n    if (props.songIndex === props.index) {\r\n        classActive = \"song active\"\r\n    }\r\n\r\n    const toogleThreeDot = () => (classOption === \"option-songs-btn\") ? setClassOption(\"option-songs-btn show-option-songs\") : setClassOption(\"option-songs-btn\");\r\n\r\n    return (\r\n        <div className={classActive} id={`song-${props.index}`} onClick={() => { modifySongPlay(props.index) }}>\r\n            <div className=\"thumb\" style={{ backgroundImage: `url('${props.thumb}')` }}>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <h3 className=\"title\">{props.title}</h3>\r\n                <p className=\"author\">{props.singer}</p>\r\n            </div>\r\n\r\n            <div className=\"option\" onClick={(event) => { event.stopPropagation() }}>\r\n                <i className=\"fas fa-ellipsis-h three-dot\" onClick={() => {toogleThreeDot()}}></i>\r\n                <div className={classOption}>\r\n                    <button onClick={handleShowDownload}>Download <i className=\"fas fa-download\"></i></button>\r\n                    <button onClick={handleShowDelete} >Soft delete <i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n\r\n                <Modal className=\"custom-modal-01\" show={showDownload} onHide={handleCloseDownload}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Download {props.title}</Modal.Title>\r\n                        <button type=\"button\" class=\"custom-btn-close-modal\" onClick={handleCloseDownload} aria-label=\"Close\"><i className=\"fas fa-times\"></i></button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to download this song ?\r\n                        <div class=\"thumbnail\">\r\n                            <img alt={props.title} src={props.thumb} className=\"thumbnail-img\"></img>\r\n                            <div className=\"thumbnail-content\">\r\n                            <h5><b>Song</b> : {props.title}</h5>\r\n                            <h5><b>by</b> {props.singer}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" className=\"custom-close-btn\" onClick={handleCloseDownload}>\r\n                            Close\r\n                        </Button>\r\n                        <Button className=\"custom-download-btn\" href={props.src} download>\r\n                            Download <i className=\"fas fa-download\"></i>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal className=\"custom-modal-01 darkTheme\" show={showDelete} onHide={handleCloseDelete}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Remove {props.title} </Modal.Title>\r\n                        <button type=\"button\" class=\"custom-btn-close-modal\" aria-label=\"Close\" onClick={handleCloseDelete}><i className=\"fas fa-times\"></i></button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to remove this song from your list ? <br/> <span class=\"custom-text-note\">Note that this song won't be deleted permanently from my database :)</span>\r\n                        <div class=\"thumbnail\">\r\n                            <img alt={props.title} src={props.thumb} className=\"thumbnail-img\"></img>\r\n                            <div className=\"thumbnail-content\">\r\n                            <h5><b>Song</b> : {props.title}</h5>\r\n                            <h5><b>by</b> {props.singer}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" className=\"custom-close-btn\" onClick={handleCloseDelete}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"danger\" className=\"custom-delete-btn\" onClick={() => {props.handleSoftDelte(props.index); toogleThreeDot(); handleCloseDelete();}}>\r\n                            Delete <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import AddSong from './AddSong'\r\nimport Song from './Song'\r\n\r\nexport default function Playlist(props) {\r\n    return (\r\n        <div key={props.songRegion + \" \" + props.classTheme} className=\"playlist\">\r\n            {props.songs && props.songs.map((song, index) => {\r\n                return (\r\n                    <Song handleSoftDelte={props.handleSoftDelte} thumb= {song.image} title={song.name} src={song.path} singer={song.singer} songIndex={props.songIndex} index={index} key={index} modifySongPlay={props.modifySongPlay} modifyIsPlaying={props.modifyIsPlaying}/>\r\n                )\r\n            })}\r\n            <AddSong modifySongPlay={props.modifySongPlay} songs={props.songs} handleAddSong={props.handleAddSong}/>\r\n        </div>\r\n    )\r\n}","import Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"Loading\">\r\n            <h1>Loading songs from database <Spinner animation=\"border\" variant=\"danger\" /></h1>\r\n        </div>\r\n    )\r\n}","import '../css/App.css';\nimport Dashboard from './Dashboard';\nimport Playlist from './Playlist';\nimport { useState, useRef, useEffect } from 'react';\nimport Loading from './Loading';\n\n\nfunction Home() {\n  const songVn = useRef();\n  const songUs = useRef();\n  const [songRegion, setSongRegion] = useState(\"usuk\");\n  const [songs, setSongs] = useState([]);\n  const [songAdded, setSongAdded] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const audioRef = useRef();\n  const [songIndex, setSongIndex] = useState(0);\n  const [src, setSrc] = useState(\"\");\n  const [cdThumb, setCdThumb] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [singer, setSinger] = useState(\"\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [activeRandom, setActiveRandom] = useState(false);\n  const [activeRepeat, setActiveRepeat] = useState(false);\n  const [firstLoading, setFirstLoading] = useState(true);\n  const [classTheme, setClassTheme] = useState(\"defualt-theme\");\n  const [volume, setVolume] = useState(1);\n  const [volumeBackground, setVolumeBackground] = useState(\"volume-background\");\n  const [volumeIcon, setVolumeIcon] = useState(\"fas fa-volume-up\");\n\n  const songDetail = {\n    src,\n    cdThumb,\n    song,\n    singer,\n    isPlaying,\n    songIndex,\n    duration,\n    classTheme,\n    songRegion,\n  }\n\n  useEffect(() => {\n    const func = async () => {\n      if (firstLoading) {\n        setLoading(true);\n        await fetch(\"https://api-trunkeymusicplayer.herokuapp.com/api/us\")\n          .then((response) => response.json())\n          .then((data) => {\n            songUs.current = data;\n          })\n          .catch((next) => console.log(next));\n\n        await fetch(\"https://api-trunkeymusicplayer.herokuapp.com/api/vn\")\n          .then((response) => response.json())\n          .then((data) => {\n            songVn.current = data;\n          })\n          .catch((next) => console.log(next))\n          .finally(() => { setLoading(false); setFirstLoading(false); })\n        const songs = (songRegion === \"usuk\") ? songUs.current : songVn.current;\n        setSongs(songs);\n        setCdThumb(songs[0].image);\n        setSong(songs[0].name);\n        setSinger(songs[0].singer);\n        setSrc(songs[0].path);\n        setSongIndex(0);\n        setTimeManually(0);\n        setPercentage(0);\n      } else {\n        let songs;\n        if (songs && songRegion === \"usuk\") songUs.current = songs;\n        if (songs && songRegion === \"vn\") songVn.current = songs;\n        songs = (songRegion === \"usuk\") ? songUs.current : songVn.current;\n        setSongs(songs);\n        setCdThumb(songs[0].image);\n        setSong(songs[0].name);\n        setSinger(songs[0].singer);\n        setSrc(songs[0].path);\n      }\n    }\n\n    func();\n  }, [songRegion, firstLoading])\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n    }\n  }, [volume, audioRef.current])\n\n\n  let classes;\n\n  const play = () => {\n    const audio = audioRef.current;\n    audio.play();\n  }\n\n  const pause = () => {\n    const audio = audioRef.current;\n    audio.pause();\n  }\n\n  if (isPlaying && audioRef.current) {\n    classes = \"player playing\";\n    play();\n  } else if (audioRef.current) {\n    classes = \"player\";\n    pause();\n  } else {\n    classes = \"player\";\n  }\n\n  const modifySrc = function (url) {\n    setSrc(url);\n  }\n\n  const modifyActiveRandom = function (param) {\n    setActiveRandom(param);\n  }\n\n  const modifyActiveRepeat = function (param) {\n    setActiveRepeat(param);\n  }\n\n  const modifyCdThumb = function (url) {\n    setCdThumb(url);\n  }\n\n  const modifySong = function (url) {\n    setSong(url);\n  }\n\n  const modifySinger = function (url) {\n    setSinger(url);\n  }\n\n  const modifyIsPlaying = function (isPlaying) {\n    setIsPlaying(!isPlaying);\n  }\n\n  const modifyPercentage = function (percentage) {\n    setPercentage(percentage);\n  }\n\n  const modifySongRegion = function (region) {\n    setSongIndex(0);\n    setSongRegion(region);\n  }\n\n  const modifySongPlay = function (index, isForced) {\n    if (songs) {\n      if (!isForced) {\n        if (activeRandom) {\n          index = Math.round(Math.random() * songs.length);\n        }\n        if (activeRepeat) {\n          index = songIndex;\n        }\n      }\n      if (songs[index]){\n      setSongIndex(index);\n      setTimeManually(0);\n      setPercentage(0);\n      modifySong(songs[index].name);\n      modifySinger(songs[index].singer);\n      modifySrc(songs[index].path);\n      modifyCdThumb(songs[index].image);\n      }\n    }\n  }\n\n  const modifySongState = {\n    modifyActiveRandom,\n    modifyActiveRepeat,\n  }\n\n  const songState = {\n    activeRandom,\n    activeRepeat\n  }\n\n  const modifyClassTheme = () => {\n    (classTheme === \"defualt-theme\") ? setClassTheme(\"custom-theme-01\") : ((classTheme === \"custom-theme-01\") ? setClassTheme(\"custom-theme-02\") : ((classTheme === \"custom-theme-02\") ? setClassTheme(\"custom-theme-03\") : setClassTheme(\"defualt-theme\")));\n  }\n\n  const updateTime = (e) => {\n    const _percentage = e.target.currentTime / duration * 100;\n    setPercentage(_percentage);\n    if (percentage === 100) {\n      if (songIndex === songs.length - 1)\n        modifySongPlay(0); else modifySongPlay(songIndex + 1);\n    }\n  }\n\n  const setTimeManually = (e) => {\n    audioRef.current.currentTime = e;\n  }\n\n  const handleSoftDelte = (index) => {\n    let newSongs = [...songs];\n    newSongs.splice(index, 1);\n    setSongs(newSongs);\n  }\n\n  const handleAddSong = (song) => {\n    let newSongs = [...songs];\n    newSongs.push(song);\n    setSongs(newSongs);\n    setSongAdded(true);\n  }\n\n  useEffect(() =>{\n    if (songAdded){\n      modifySongPlay(songs.length-1, true);\n      setSongAdded(false);\n    }\n  }, [handleAddSong, songAdded])\n\n  const handleOnChangeVolume = (e) => {\n    setVolume(e.target.value);\n  }\n\n  const ModifySongVolume = (e) => {\n    switch (volume) {\n      case 0:\n        setVolume(0.4);\n        setVolumeBackground(\"volume-background-02\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.4:\n        setVolume(0.65);\n        setVolumeBackground(\"volume-background-03\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.65:\n        setVolume(0.8);\n        setVolumeBackground(\"volume-background-04\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.8:\n        setVolume(1);\n        setVolumeBackground(\"volume-background\");\n        setVolumeIcon(\"fas fa-volume-up\");\n        break;\n      case 1:\n        setVolume(0);\n        setVolumeBackground(\"volume-background-01\");\n        setVolumeIcon(\"fas fa-volume-mute\");\n        break;\n      default: alert(\"Sound Volume error\");\n    }\n  }\n\n  return (\n    <div className={`${classes} ${classTheme}`}>\n      {(loading === true) ? <Loading /> : (<>\n        <Dashboard songState={songState} volumeIcon={volumeIcon} volumeBackground={volumeBackground} ModifySongVolume={ModifySongVolume} modifyClassTheme={modifyClassTheme} modifySongRegion={modifySongRegion} modifySongState={modifySongState} songCount={songs.length} songDetail={songDetail} modifyIsPlaying={modifyIsPlaying} modifySongPlay={modifySongPlay} percentage={percentage} modifyPercentage={modifyPercentage} modifyCurruntTime={setTimeManually} songs={songs} />\n        <audio ref={audioRef} id=\"audio\" onTimeUpdate={(e) => updateTime(e)} src={src} onLoadedData={(e) => { setDuration(e.currentTarget.duration); }}></audio>\n        <Playlist classTheme={classTheme} songRegion={songRegion} handleSoftDelte={handleSoftDelte} songIndex={songIndex} src={src} modifySongPlay={modifySongPlay} modifyIsPlaying={modifyIsPlaying} songs={songs} handleAddSong={handleAddSong}/>\n      </>)}\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from './components/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}